Lection 3
https://www.youtube.com/watch?v=8LaDpZDSN8M
https://www.youtube.com/watch?v=x4Bu8UGI5Y0

...Домашнее задание 3
Задача: добавить в существующую программу новую функциональность.
О программе: программа представляет собой список дел и покупок, в которую можно добавлять новые дела и смотреть их список.
Как работает программа:
У програмы есть два главных типа данных: команда и модель. Команда - действие, которое мы совержаем над моделью. Сама модель - просто набор данных: название, цена и т.д.
Команды могут создавать и изменять модели. У каждой команды своя логика работы. У модели нет логики, она просто хранит набор данных.
Управление ведется через консоль. Пользователь выбирает из списка короткое имя команды: если оно введено верно, происходит создание и выпонение команды. Команда в свою очередь выполняет свою внутреннюю логику.
Структура:
main.py - главный файл, он содержит в себе логику, как программа будет запускаться и работать. Входная точка. Его нужно запускать.
commands.py - файл с коммандами: NewCommand, ListCommand, ...
models.py - файл с моделями: ToReadItem, ToDoItem, ...
utils.py - файл с простыми функциями-помошниками.
custom_exceptions.py - файл с новыми классами ошибок для программы.
Технические требования:
Необходимо добавить в программу возможность добавлять новый тип задач: ToReadItem, у которого будут следующие параметры:
Название
Имя автора

Необходимо добавить в программу новую команду: DoneCommand, которая бы отмечала любое выбранное дело, как выполненное.
Необходимо добавить в программу новую команду: UndoneCommand, которое бы отмечало выполненное действие, как невыполненное.

Код программы в архиве homework3.zip

Усложненная версия:
Сделать так, чтобы работала динамическая подгрузка комманд и моделей, без явного указания на сами классы.
Сделать новую команду SaveCommand, которая бы сохраняла результаты работы в файл. При новом запуске файл сохранения должен подгружаться, если существует.
Материалы:

Что такое фабрика: https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B1%D1%80%D0%B8%D1%87%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)

Что такое фабрика: https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B1%D1%80%D0%B8%D1%87%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)
__repr__: https://habrahabr.ru/sandbox/82471/

Singleton (в нашей программе одиночкой является Storage): https://ru.wikipedia.org/wiki/%D0%9E%D0%B4%D0%B8%D0%BD%D0%BE%D1%87%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)
Если возникают вопросы, не стесняйтесь их задавать в канале #help.
